{#

The TOC generation is handled by a custom Nunjucks shortcode and rendered in the base.njk layout. Here's a brief overview of the implementation:

eleventy.js Configuration:

We use markdown-it with markdown-it-anchor and markdown-it-attrs to parse Markdown content and generate anchor links.
A custom shortcode extractHeadings is created to extract and format the headings from the Markdown content.

base.njk Layout:

The layout includes the toc.njk partial, which renders the TOC if toc is enabled in the front matter.
toc.njk Partial:

This partial handles the rendering of the TOC. It checks if toc is enabled and then generates the TOC based on the extracted headings.

#}

{% if toc %}
<aside>
	<h2>{{ onThisPage[locale].heading }}</h2>
	<ul>
		{% set current_level = 2 %}
		{% for heading in headings %}
		{% if heading.level == 'h2' %}
		{% if loop.index != 1 %}</ul>
	</li>{% endif %}
	<li><a href="#{{ heading.id }}">{{ heading.text }}</a>
		{% set current_level = 2 %}
		{% if loop.last %}</li>{% endif %}
	{% elseif heading.level == 'h3' %}
	{% if current_level < 3 %}
	  <ul>
		{% set current_level = 3 %}
		{% endif %}
		<li><a href="#{{ heading.id }}">{{ heading.text }}</a></li>
		{% if loop.last %}</ul>
		</li>{% endif %}
		{% endif %}
		{% endfor %}
		{% if current_level > 2 %}</ul>
		</li>{% endif %}
		</ul>
</aside>
{% endif %}
